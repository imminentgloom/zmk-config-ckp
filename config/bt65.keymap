#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    combos {
        compatible = "zmk,combos";

        toggle_macos {
            bindings = <&tog 2>;
            key-positions = <58 63 61>;
            layers = <2>;
        };

        hold_bluetooth {
            bindings = <&sl 3>;
            key-positions = <58 44>;
            layers = <3>;
        };

        toggle_lock {
            bindings = <&tog 4>;
            key-positions = <0 59 14 68>;
            layers = <4>;
        };
    };

    macros {
        lights_off: toggle_lights {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bl BL_OFF &rgb_ug RGB_OFF>;
            label = "TOGGLE_LIGHTS";
        };

        lights_on: lights_on {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bl BL_ON &rgb_ug RGB_ON>;
            label = "LIGHTS_ON";
        };
    };

    behaviors {
        tap_esc: tap_esc {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_ESC";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&kp NON_US_BACKSLASH>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // ------------------------------------------------------------------------------------------------------------
            // |  `  |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  8  |  9  |  0  |  -  |  =  |BKSP | INS		|
            // | TAB  |  Q  |  W  |  E  |  R  |  T  |  Y  |  U  |  I  |  O  |  P  |  [  |  ]  |   \    | DEL		|
            // | CAPS  |  A  |  S  |  D  |  F  |  G  |  H  |  J  |  K  |  L  |  ;  |  '  |     ENTER    |PGUP	|
            // |  SHIFT  |  Z  |  X  |  C  |  V  |  B  |  N  |  M  |  ,  |  .  | /   |   SHIFT  | UP   | PGDN|
            // |  CTL  |  WIN  |  ALT  |            SPACE               | ALT | 1    |  MENU| LEFT |  DOWN    | RIGHT	|
            // ------------------------------------------------------------------------------------------------------------

            bindings = <
&tap_esc          &kp N1                &kp N2        &kp N3            &kp N4     &kp N5             &kp N6         &kp N7         &kp N8    &kp N9     &kp N0     &kp MINUS  &kp EQUAL        &kp BACKSPACE  &kp DEL
&kp TAB           &kp Q                 &kp W         &kp E             &kp R      &kp T              &kp Y          &kp U          &kp I     &kp O      &kp P      &kp LBKT   &kp RBKT                        &kp PAGE_UP
&kp LEFT_CONTROL  &kp A                 &kp S         &kp D             &kp F      &kp G              &kp H          &kp J          &kp K     &kp L      &kp SEMI   &kp SQT    &kp NON_US_HASH  &kp RET        &kp PAGE_DOWN
&kp LSHFT         &kp NON_US_BACKSLASH  &kp Z         &kp X             &kp C      &kp V              &kp B          &kp N          &kp M     &kp COMMA  &kp DOT    &kp FSLH   &kp RSHFT        &kp UP         &mo 1
                  &kp LEFT_WIN          &kp LEFT_ALT  &kp LEFT_CONTROL  &kp SPACE  &kp RIGHT_CONTROL  &kp RIGHT_ALT  &kp RIGHT_WIN  &kp LEFT  &kp DOWN   &kp RIGHT
            >;
        };

        raise {
            bindings = <
&trans      &kp F1  &kp F2    &kp F3        &kp F4     &kp F5         &kp F6  &kp F7  &kp F8      &kp F9             &kp F10    &kp F11   &kp F12          &trans           &lights_on
&trans      &trans  &kp HOME  &kp UP_ARROW  &kp END    &kp PAGE_UP    &trans  &trans  &kp INS     &trans             &kp PSCRN  &kp SLCK  &kp PAUSE_BREAK                   &lights_off
&caps_word  &trans  &kp LEFT  &kp DOWN      &kp RIGHT  &kp PAGE_DOWN  &trans  &trans  &trans      &trans             &trans     &trans    &sys_reset       &bootloader      &trans
&trans      &trans  &trans    &trans        &trans     &trans         &trans  &trans  &trans      &trans             &trans     &trans    &trans           &kp C_VOLUME_UP  &trans
            &trans  &trans    &trans        &trans     &trans         &trans  &trans  &kp C_MUTE  &kp C_VOLUME_DOWN  &trans
            >;
        };

        macos {
            bindings = <
&trans            &trans            &trans        &trans            &trans  &trans             &trans         &trans             &trans  &trans  &trans  &trans  &trans       &trans  &trans
&trans            &trans            &trans        &trans            &trans  &trans             &trans         &trans             &trans  &trans  &trans  &trans  &trans               &trans
&kp LEFT_COMMAND  &trans            &trans        &trans            &trans  &trans             &trans         &trans             &trans  &trans  &trans  &trans  &kp AT_SIGN  &trans  &trans
&trans            &trans            &trans        &trans            &trans  &trans             &trans         &trans             &trans  &trans  &trans  &trans  &trans       &trans  &trans
                  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_COMMAND  &trans  &kp RIGHT_COMMAND  &kp RIGHT_ALT  &kp RIGHT_CONTROL  &trans  &trans  &trans
            >;
        };

        bluetooth {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none  &none  &none       &none         &none       &none  &none  &bt BT_CLR    &none
&none  &none         &none         &none         &none         &none         &none  &none  &none       &none         &none       &none  &none                &none
&none  &none         &none         &none         &none         &none         &none  &none  &none       &none         &none       &none  &none  &none         &none
&none  &none         &none         &none         &none         &none         &none  &none  &none       &none         &none       &none  &none  &out OUT_BLE  &none
       &none         &none         &none         &none         &none         &none  &none  &bt BT_PRV  &out OUT_USB  &bt BT_NXT
            >;
        };

        lock {
            bindings = <
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none         &none
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
       &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
            >;
        };
    };
};
